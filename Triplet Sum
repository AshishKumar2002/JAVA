You have been given a random integer array/list(ARR) and a number X. Find and return the number of triplets in the array/list which sum to X.
Note :Given array/list can contain duplicate elements.
Input format :
First line of each test case or query contains an integer 'N' representing the size of the first array/list.

Second line contains 'N' single space separated integers representing the elements in the array/list.

Third line contains an integer 'X'.

Output format :
For each test case, print the total number of triplets present in the array/list.

Output for every test case will be printed in a separate line.

Constraints :
0 <= N <= 10^2
0 <= X <= 10^9
Time Limit: 1 sec
Sample Input 1:
1
7
1 2 3 4 5 6 7 
12
import java.util.Scanner;

public class Triplet_Sum {
	public static int findTriplet(int[] arr, int x) {
        int numPairs = 0;
        for(int i=0;i<arr.length;i++){
            for(int j=i+1;j<arr.length;j++){
                for(int k=j+1;k<arr.length;k++){
                    if(arr[i]+arr[j]+arr[k]==x)
                    {
                    numPairs += 1;
                    }
                }
              
            }
        }
        return numPairs;
    }
	public static int[] takeInput()
	{

		Scanner sc=new Scanner(System.in);
		int size=sc.nextInt();
		int arr[]=new int[size];
		for(int i=0;i<size;i++) {
			arr[i]=sc.nextInt();
		}
		return arr;
	}
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int arr[]=takeInput();
		int x=sc.nextInt();
		System.out.println(Triplet_Sum.findTriplet(arr, x));
	}
}
